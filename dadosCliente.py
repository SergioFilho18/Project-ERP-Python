# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'dadosCliente.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from asyncio.windows_events import NULL
from PyQt5 import QtCore, QtGui, QtWidgets


### IMPORT SISTEMA ###
import pyodbc
import pandas as pd
import tkinter
from tkinter import messagebox

### Arquivo variáveis de controle ###
import variaveisControle

### Variaveis de conexão com o banco de dados ###

Driver = variaveisControle.Driver
Server = variaveisControle.Server
DB = variaveisControle.DB
Trust = variaveisControle.Trust

class Ui_formDadosCliente(object):
    def setupUi(self, formDadosCliente):
        self.formDadosCliente = formDadosCliente
        formDadosCliente.setObjectName("formDadosCliente")
        formDadosCliente.resize(335, 187)
        self.LBL_nome = QtWidgets.QLabel(formDadosCliente)
        self.LBL_nome.setGeometry(QtCore.QRect(10, 20, 47, 13))
        self.LBL_nome.setObjectName("LBL_nome")
        self.LE_nome = QtWidgets.QLineEdit(formDadosCliente)
        self.LE_nome.setGeometry(QtCore.QRect(60, 20, 261, 16))
        self.LE_nome.setObjectName("LE_nome")
        self.LE_telefone = QtWidgets.QLineEdit(formDadosCliente)
        self.LE_telefone.setGeometry(QtCore.QRect(60, 50, 261, 16))
        self.LE_telefone.setObjectName("LE_telefone")
        self.LBL_telefone = QtWidgets.QLabel(formDadosCliente)
        self.LBL_telefone.setGeometry(QtCore.QRect(10, 50, 47, 13))
        self.LBL_telefone.setObjectName("LBL_telefone")
        self.LE_cidade = QtWidgets.QLineEdit(formDadosCliente)
        self.LE_cidade.setGeometry(QtCore.QRect(60, 80, 261, 16))
        self.LE_cidade.setObjectName("LE_cidade")
        self.LBL_cidade = QtWidgets.QLabel(formDadosCliente)
        self.LBL_cidade.setGeometry(QtCore.QRect(10, 80, 47, 13))
        self.LBL_cidade.setObjectName("LBL_cidade")
        self.BT_cancelar = QtWidgets.QPushButton(formDadosCliente)
        self.BT_cancelar.setGeometry(QtCore.QRect(10, 110, 81, 71))
        self.BT_cancelar.setStyleSheet("image:url(:/icon_cancelar/icons/cancelar.png)")
        self.BT_cancelar.setText("")
        self.BT_cancelar.setObjectName("BT_cancelar")
        self.BT_cadastrar = QtWidgets.QPushButton(formDadosCliente)
        self.BT_cadastrar.setGeometry(QtCore.QRect(240, 110, 81, 71))
        self.BT_cadastrar.setStyleSheet("image:url(:/icon_cadastrar/icons/cadastrar.png)")
        self.BT_cadastrar.setText("")
        self.BT_cadastrar.setObjectName("BT_cadastrar")

        self.retranslateUi(formDadosCliente)
        QtCore.QMetaObject.connectSlotsByName(formDadosCliente)

    def retranslateUi(self, formDadosCliente):
        _translate = QtCore.QCoreApplication.translate
        formDadosCliente.setWindowTitle(_translate("formDadosCliente", "Form"))
        self.LBL_nome.setText(_translate("formDadosCliente", "Nome:"))
        self.LBL_telefone.setText(_translate("formDadosCliente", "Telefone:"))
        self.LBL_cidade.setText(_translate("formDadosCliente", "Cidade:"))
        
        
        ### BOTÕES SISTEMA ###
        self.BT_cancelar.clicked.connect(lambda: self.sairTela(formDadosCliente))
        self.BT_cadastrar.clicked.connect(self.cadastrarCliente)
        
        
        ### FUNÇÕES CLIENTE ###
    def sairTela(self, formDadosCliente):
        formDadosCliente.close()
        
        ## CADASTRAR CLIENTE ##
    def cadastrarCliente(self):
        # Conexão com o banco de dados SQL Server
            conn = pyodbc.connect(
                f'DRIVER={Driver};SERVER={Server};DATABASE={DB};Trusted_Connection={Trust};'
            )
            
            cursor = conn.cursor()
            nomeINSERT = self.LE_nome.text()
            telefoneINSERT = self.LE_telefone.text()
            cidadeINSERT = self.LE_cidade.text()
            
            if len(nomeINSERT) > 50:
                messagebox.showinfo("ERRO!", "O campo Nome deve ter no máximo 50 caracteres!")
                return  # Interrompe a execução para corrigir o campo
            if len(telefoneINSERT) > 25:
                messagebox.showinfo("ERRO!", "O campo Telefone deve ter no máximo 25 caracteres!")
                return
            if len(cidadeINSERT) > 50:
                messagebox.showinfo("ERRO!", "O campo Cidade deve ter no máximo 50 caracteres!")
                return
                
            if telefoneINSERT:
                queryInsert = "INSERT INTO Cliente(Nome, Telefone, Cidade) VALUES (?, ?, ?)"
                val = (nomeINSERT, telefoneINSERT, cidadeINSERT)
                cursor.execute(queryInsert, val)
                conn.commit()
                cursor.close()
                self.LE_nome.clear()
                self.LE_telefone.clear()
                self.LE_cidade.clear()
                messagebox.showinfo("Sucesso!", "Cliente inserido com sucesso!")
                self.formDadosCliente.close()
            else:
              # This code is to hide the main tkinter window
                root = tkinter.Tk()
                root.withdraw()

                # Message Box
                messagebox.showinfo("ERRO!", "Por favor, insira um telefone válido!")  
            
            
            
            

            
            
            
### ICONS SISTEMA ###
import icon_cadastrar
import icon_cancelar


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    formDadosCliente = QtWidgets.QWidget()
    ui = Ui_formDadosCliente()
    ui.setupUi(formDadosCliente)
    formDadosCliente.show()
    sys.exit(app.exec_())
